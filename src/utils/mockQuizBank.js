// ✅ 난이도별 10문제씩, 총 30문항
export const MOCK_QUIZ_BANK = [
  // ==================== ✅ 하 (기초 난이도) ====================
  {
    id: "easy1",
    difficulty: "하",
    type: "single",
    text: "React에서 상태를 관리할 때 사용하는 Hook은?",
    options: [
      { id: "o1", text: "useState" },
      { id: "o2", text: "useClass" },
      { id: "o3", text: "useVar" },
      { id: "o4", text: "useMemo" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "easy2",
    difficulty: "하",
    type: "single",
    text: "JavaScript에서 배열의 길이를 구하는 속성은?",
    options: [
      { id: "o1", text: ".length" },
      { id: "o2", text: ".size" },
      { id: "o3", text: ".count" },
      { id: "o4", text: ".len" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "easy3",
    difficulty: "하",
    type: "single",
    text: "HTTP에서 리소스를 조회할 때 사용하는 메서드는?",
    options: [
      { id: "o1", text: "POST" },
      { id: "o2", text: "PUT" },
      { id: "o3", text: "GET" },
      { id: "o4", text: "DELETE" },
    ],
    correctOptionIds: ["o3"],
  },
  {
    id: "easy4",
    difficulty: "하",
    type: "single",
    text: "CSS에서 글자 색상을 지정하는 속성은?",
    options: [
      { id: "o1", text: "color" },
      { id: "o2", text: "font-color" },
      { id: "o3", text: "text-color" },
      { id: "o4", text: "paint" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "easy5",
    difficulty: "하",
    type: "single",
    text: "HTML에서 가장 큰 제목 태그는?",
    options: [
      { id: "o1", text: "<h1>" },
      { id: "o2", text: "<header>" },
      { id: "o3", text: "<title>" },
      { id: "o4", text: "<h6>" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "easy6",
    difficulty: "하",
    type: "multi",
    text: "다음 중 React 라이프사이클 단계는? (복수 선택)",
    options: [
      { id: "o1", text: "Mounting" },
      { id: "o2", text: "Updating" },
      { id: "o3", text: "Deleting" },
      { id: "o4", text: "Unmounting" },
    ],
    correctOptionIds: ["o1", "o2", "o4"],
  },
  {
    id: "easy7",
    difficulty: "하",
    type: "single",
    text: "JavaScript에서 ‘=='와 ‘==='의 차이는?",
    options: [
      { id: "o1", text: "=='는 값만, ===는 값과 타입을 비교" },
      { id: "o2", text: "=='는 타입만 비교" },
      { id: "o3", text: "둘 다 같다" },
      { id: "o4", text: "===는 값만 비교" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "easy8",
    difficulty: "하",
    type: "single",
    text: "콘솔에 출력하려면 무엇을 쓰는가?",
    options: [
      { id: "o1", text: "console.write()" },
      { id: "o2", text: "console.log()" },
      { id: "o3", text: "print()" },
      { id: "o4", text: "log.print()" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "easy9",
    difficulty: "하",
    type: "single",
    text: "React 프로젝트를 시작하려면 어떤 명령을 사용하는가?",
    options: [
      { id: "o1", text: "npm start" },
      { id: "o2", text: "create-react-app" },
      { id: "o3", text: "npm run build" },
      { id: "o4", text: "npx create-react-app" },
    ],
    correctOptionIds: ["o4"],
  },
  {
    id: "easy10",
    difficulty: "하",
    type: "multi",
    text: "브라우저 저장소 중 영구 저장이 가능한 것은? (복수 선택)",
    options: [
      { id: "o1", text: "localStorage" },
      { id: "o2", text: "sessionStorage" },
      { id: "o3", text: "IndexedDB" },
      { id: "o4", text: "RAM" },
    ],
    correctOptionIds: ["o1", "o3"],
  },

  // ==================== ✅ 중 난이도 10문항 ====================
  {
    id: "mid1",
    difficulty: "중",
    type: "single",
    text: "React에서 부수 효과(effect)를 다룰 때 사용하는 Hook은?",
    options: [
      { id: "o1", text: "useMemo" },
      { id: "o2", text: "useEffect" },
      { id: "o3", text: "useCallback" },
      { id: "o4", text: "useRef" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "mid2",
    difficulty: "중",
    type: "single",
    text: "REST에서 리소스를 전체 수정할 때 사용하는 메소드는?",
    options: [
      { id: "o1", text: "PATCH" },
      { id: "o2", text: "PUT" },
      { id: "o3", text: "POST" },
      { id: "o4", text: "GET" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "mid3",
    difficulty: "중",
    type: "multi",
    text: "HTTP 상태 코드 2xx 성공 응답에 해당하는 것은? (복수 선택)",
    options: [
      { id: "o1", text: "200 OK" },
      { id: "o2", text: "201 Created" },
      { id: "o3", text: "301 Moved Permanently" },
      { id: "o4", text: "204 No Content" },
    ],
    correctOptionIds: ["o1", "o2", "o4"],
  },
  {
    id: "mid4",
    difficulty: "중",
    type: "single",
    text: "JavaScript에서 'this'는 기본적으로 무엇을 가리키는가?",
    options: [
      { id: "o1", text: "전역 객체(window)" },
      { id: "o2", text: "null" },
      { id: "o3", text: "undefined" },
      { id: "o4", text: "document" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "mid5",
    difficulty: "중",
    type: "single",
    text: "ES6에서 함수를 더 짧게 표기하는 방법은?",
    options: [
      { id: "o1", text: "arrow function (=>)" },
      { id: "o2", text: "function()" },
      { id: "o3", text: "lambda()" },
      { id: "o4", text: "shortfunc()" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "mid6",
    difficulty: "중",
    type: "multi",
    text: "React에서 상태 관리 라이브러리는? (복수 선택)",
    options: [
      { id: "o1", text: "Redux" },
      { id: "o2", text: "Zustand" },
      { id: "o3", text: "MobX" },
      { id: "o4", text: "Lodash" },
    ],
    correctOptionIds: ["o1", "o2", "o3"],
  },
  {
    id: "mid7",
    difficulty: "중",
    type: "single",
    text: "JWT의 구성 요소 3가지는?",
    options: [
      { id: "o1", text: "Header, Payload, Signature" },
      { id: "o2", text: "ID, Password, Hash" },
      { id: "o3", text: "Key, Value, Token" },
      { id: "o4", text: "Public, Private, Session" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "mid8",
    difficulty: "중",
    type: "single",
    text: "데이터베이스에서 CRUD 중 '업데이트'에 해당하는 연산은?",
    options: [
      { id: "o1", text: "Create" },
      { id: "o2", text: "Read" },
      { id: "o3", text: "Update" },
      { id: "o4", text: "Delete" },
    ],
    correctOptionIds: ["o3"],
  },
  {
    id: "mid9",
    difficulty: "중",
    type: "multi",
    text: "REST의 특징은? (복수 선택)",
    options: [
      { id: "o1", text: "Stateless (무상태)" },
      { id: "o2", text: "Client-Server 구조" },
      { id: "o3", text: "Server-Client 구조" },
      { id: "o4", text: "HTTP 기반" },
    ],
    correctOptionIds: ["o1", "o2", "o4"],
  },
  {
    id: "mid10",
    difficulty: "중",
    type: "single",
    text: "React에서 컴포넌트를 내보내려면 사용하는 문법은?",
    options: [
      { id: "o1", text: "export default" },
      { id: "o2", text: "import default" },
      { id: "o3", text: "require()" },
      { id: "o4", text: "send()" },
    ],
    correctOptionIds: ["o1"],
  },

  // ==================== ✅ 상 난이도 10문항 ====================
  {
    id: "hard1",
    difficulty: "상",
    type: "single",
    text: "React에서 렌더링 최적화를 위해 값을 캐싱하는 Hook은?",
    options: [
      { id: "o1", text: "useEffect" },
      { id: "o2", text: "useMemo" },
      { id: "o3", text: "useState" },
      { id: "o4", text: "useRef" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "hard2",
    difficulty: "상",
    type: "single",
    text: "useEffect에서 cleanup 함수는 언제 실행되는가?",
    options: [
      { id: "o1", text: "컴포넌트 생성 시" },
      { id: "o2", text: "렌더링 직후" },
      { id: "o3", text: "렌더링 전" },
      { id: "o4", text: "컴포넌트 언마운트 시" },
    ],
    correctOptionIds: ["o4"],
  },
  {
    id: "hard3",
    difficulty: "상",
    type: "multi",
    text: "CSR(Client Side Rendering)의 단점은? (복수 선택)",
    options: [
      { id: "o1", text: "초기 로딩 속도가 느릴 수 있음" },
      { id: "o2", text: "SEO 적용 어려움" },
      { id: "o3", text: "JavaScript 의존도가 큼" },
      { id: "o4", text: "HTML만으로 완벽 구동" },
    ],
    correctOptionIds: ["o1", "o2", "o3"],
  },
  {
    id: "hard4",
    difficulty: "상",
    type: "single",
    text: "React에서 Virtual DOM을 사용하는 주된 이유는?",
    options: [
      { id: "o1", text: "CSS 성능 개선" },
      { id: "o2", text: "실제 DOM 조작 최소화" },
      { id: "o3", text: "서버 부하 감소" },
      { id: "o4", text: "데이터베이스 감소" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "hard5",
    difficulty: "상",
    type: "single",
    text: "HTTP 500번대 에러의 의미는?",
    options: [
      { id: "o1", text: "클라이언트 요청 오류" },
      { id: "o2", text: "서버 내부 오류" },
      { id: "o3", text: "권한 없음" },
      { id: "o4", text: "리다이렉트 요청" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "hard6",
    difficulty: "상",
    type: "multi",
    text: "HTTP 응답 헤더 중 캐싱 관련된 헤더는? (복수 선택)",
    options: [
      { id: "o1", text: "Cache-Control" },
      { id: "o2", text: "ETag" },
      { id: "o3", text: "Authorization" },
      { id: "o4", text: "Last-Modified" },
    ],
    correctOptionIds: ["o1", "o2", "o4"],
  },
  {
    id: "hard7",
    difficulty: "상",
    type: "single",
    text: "데이터베이스에서 인덱스(Index)의 주요 목적은?",
    options: [
      { id: "o1", text: "데이터 보안" },
      { id: "o2", text: "검색 속도 향상" },
      { id: "o3", text: "데이터 삭제" },
      { id: "o4", text: "백업 생성" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "hard8",
    difficulty: "상",
    type: "single",
    text: "React에서 key props가 필요한 이유는?",
    options: [
      { id: "o1", text: "컴포넌트 렌더링 최적화" },
      { id: "o2", text: "서버 연결" },
      { id: "o3", text: "CSS 스타일 적용" },
      { id: "o4", text: "보안 기능" },
    ],
    correctOptionIds: ["o1"],
  },
  {
    id: "hard9",
    difficulty: "상",
    type: "single",
    text: "Redux에서 상태를 변경하는 유일한 방법은?",
    options: [
      { id: "o1", text: "Reducer 호출" },
      { id: "o2", text: "dispatch()로 Action 보내기" },
      { id: "o3", text: "setState()" },
      { id: "o4", text: "Mutation 사용" },
    ],
    correctOptionIds: ["o2"],
  },
  {
    id: "hard10",
    difficulty: "상",
    type: "multi",
    text: "Typescript의 강점은? (복수 선택)",
    options: [
      { id: "o1", text: "정적 타입 검사" },
      { id: "o2", text: "런타임 오류 감소" },
      { id: "o3", text: "CSS 처리 자동화" },
      { id: "o4", text: "가독성 증가" },
    ],
    correctOptionIds: ["o1", "o2", "o4"],
  },
];
